#ifndef __LCD_HD44780_H__
#define __LCD_HD44780_H__

#include <stdint.h>
#include "hardware.h"

typedef enum{
  CUR_NONE = 0,
  CUR_LARGE = 1,
  CUR_SMALL = 2,
  CUR_BOTH = 3
}lcd_cur_t;

typedef struct{
  uint32_t sym;
  uint8_t disp_as_hex;
  uint8_t code;
}recode_t;

typedef struct{
  uint32_t sym;
  uint8_t data[8];
}usersym_t;

typedef enum{
  NL_NORMAL = 0,	// /n=newline (x=0; y++) ; /r=return to line start (x=0;)
  NL_NEWLINE =1,	// /r = /n = newline (x=0; y++); /r/n = one newline
  NL_IGNORE = 2,	// /r, /n = do nothing
}newline_mode_t;

extern void (*lcd_beep_func)(void);
extern char *lcd_temptext;

void lcd_init();
void lcd_bl(uint8_t val);
void lcd_cont(uint32_t cont);
void lcd_reload();
void lcd_update(uint32_t time, uint32_t cur_adc);
void lcd_putc(char ch);
void lcd_puts(char *str);

//////////////////////////////////////////////////////////////
#define LCD_HELP1 \
  "–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–∏–Ω—è—Ç—ã–µ –ø–æ COM-–ø–æ—Ä—Ç—É —Å–∏–º–≤–æ–ª—ã –Ω–∞ –¥–∏—Å–ø–ª–µ–µ\r\n" \
  "\r\n" \
  "–ê–ø–ø–∞—Ä–∞—Ç–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Å–∏–º–≤–æ–ª—ã:\r\n" \
  "   !@#$%&'()*+,-./0123456789:;<=>?@[\\]^_`\r\n" \
  "  ABCDEFGHIJKLMNOPQRSTUVWXYZ\r\n" \
  "  abcdefghijklmnopqrstuvwxyz\r\n" \
  "  –ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø\r\n" \
  "  –∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è—ê\r\n" \
  "  ~¬£¬ß¬´¬∞¬∂¬º¬Ω¬æ¬ø√ßƒ≥∆í–Å‚Äú‚Äû‚Öì‚Ö†‚Ö°‚Üë‚Üì‚Üµ‚á§‚á•‚íë‚íì‚íñ‚ñà\r\n" \
  "–¢–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –¥–æ 8 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤. –°–µ–π—á–∞—Å –æ–Ω–∏ —Ç–∞–∫–æ–≤—ã:\r\n  "
  
#define LCD_HELP2 "íÄÄíÄÄíÄÄíÄÄíÄÄíÄÄíÄÄíÄÄ  \r\n" //user symbols
  
#define LCD_HELP3 \
  "\r\n" \
  "–î–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ ESC-–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:\r\n" \
  "  \\e[yH    - –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –≤ (1, y)\n" \
  "  \\e[y;xH  - –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –≤ (x, y)\n" \
  "  \\e[J     - –û—á–∏—Å—Ç–∏—Ç—å –¥–∏—Å–ø–ª–µ–π –∏ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –≤ (1,1)\n" \
  "  \\e[1 q   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –≤ –≤–∏–¥–µ –º–∏–≥–∞—é—â–µ–≥–æ –±–ª–æ–∫–∞\n" \
  "  \\e[4 q   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –≤ –≤–∏–¥–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è\n" \
  "  \\e[7 q   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≤ –≤–∏–¥–µ –±–ª–æ–∫–∞ –∏ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è\n" \
  "  \\e[?25l  - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ\n" \
  "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–µ–π –Ω–∞ \\r, \\n:\r\n" \
  "  \\e[0.    - \\r - –≤–æ–∑–≤—Ä–∞—Ç –∫–∞—Ä–µ—Ç–∫–∏, \\n - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏\r\n" \
  "  \\e[1.    - \\r, \\n –æ–±–∞ - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ (–ø–∞—Ä–∞ \\r\\n —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º —Å—Ç—Ä–æ–∫–∏)\r\n" \
  "  \\e[2.    - \\r, \\n –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \\e[y;xH\r\n" \
  "–ü—Ä–æ—á–∏–µ —Å–∏–º–≤–æ–ª—ã:\r\n" \
  "  \\b       - –ü–∏—â–∞–ª–∫–∞\r\n" \
  "  \\t       - tab (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –Ω–∞ 8 —Å–∏–º–≤–æ–ª–æ–≤)\r\n" \
  "  \\n, \\r   - –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ (—Å–º. –≤—ã—à–µ)\r\n"

#define LCD_HELP_SZ (sizeof(LCD_HELP1) + sizeof(LCD_HELP2) + sizeof(LCD_HELP3) )

void vf_lcdcfg_read(uint8_t *buf, uint32_t addr, uint16_t file_idx);
void vf_lcdcfg_write(uint8_t *buf, uint32_t addr, uint16_t file_idx);

void vf_usersym_read(uint8_t *buf, uint32_t addr, uint16_t file_idx);
void vf_usersym_write(uint8_t *buf, uint32_t addr, uint16_t file_idx);

void vf_usertbl_read(uint8_t *buf, uint32_t addr, uint16_t file_idx);
void vf_usertbl_write(uint8_t *buf, uint32_t addr, uint16_t file_idx);

void vf_lcdhelp_read(uint8_t *buf, uint32_t addr, uint16_t file_idx);

#include "usb_class_virfat.h"
#define lcd_cfg_virfat_files \
{ \
  .name = "LCD_CFG CFG", \
  .file_read = vf_lcdcfg_read, \
  .file_write = vf_lcdcfg_write, \
  .size = 1, \
}, \
{ \
  .name = "LCD_HELPTXT", \
  .file_read = vf_lcdhelp_read, \
  .file_write = virfat_file_dummy, \
  .size = (LCD_HELP_SZ + 511) / 512, \
}, \
{ \
  .name = "USRSYM_0CFG", \
  .userdata = (void*)0, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_1CFG", \
  .userdata = (void*)1, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_2CFG", \
  .userdata = (void*)2, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_3CFG", \
  .userdata = (void*)3, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_4CFG", \
  .userdata = (void*)4, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_5CFG", \
  .userdata = (void*)5, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_6CFG", \
  .userdata = (void*)6, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRSYM_7CFG", \
  .userdata = (void*)7, \
  .file_read = vf_usersym_read, \
  .file_write = vf_usersym_write, \
  .size = 1, \
}, \
{ \
  .name = "USRTBL_1CFG", \
  .userdata = (void*)0, \
  .file_read = vf_usertbl_read, \
  .file_write = vf_usertbl_write, \
  .size = 1, \
}, \
{ \
  .name = "USRTBL_2CFG", \
  .userdata = (void*)1, \
  .file_read = vf_usertbl_read, \
  .file_write = vf_usertbl_write, \
  .size = 1, \
}, \
{ \
  .name = "USRTBL_3CFG", \
  .userdata = (void*)2, \
  .file_read = vf_usertbl_read, \
  .file_write = vf_usertbl_write, \
  .size = 1, \
}, \
{ \
  .name = "USRTBL_4CFG", \
  .userdata = (void*)3, \
  .file_read = vf_usertbl_read, \
  .file_write = vf_usertbl_write, \
  .size = 1, \
}, \


#endif

// 0xxxxxxx                              | 0 - 127
// 110xxxxx 10xxxxxx                     | 192 - 223 | 128 - 191
// 1110xxxx 10xxxxxx 10xxxxxx            | 224 - 239
// 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx   | 240 - 247

// 2 / 2 | 0x3000 - 37FF
// 3 / 2 | 0x3800 - 3BFF
// 3 / 3 | 0xE'0000 - E'FFFF
// 4 / 2 | 0x3C00 - 3DFF
// 4 / 3 | 0xF'0000 - F'7FFF
// 4 / 4 | 0x3C0'0000 - 3DF'FFFF

//QW 
//–§–´ 0424 042B
//‡µ¶‚ïî 000D66 002554
//íÄÄùÑû 00012000 0001D11E